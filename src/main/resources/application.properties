#MYSQL
spring.datasource.url= jdbc:mysql://localhost:3306/demo_mvc?createDatabaseIfNotExist=true
spring.datasource.username=${MYSQL_DATASOURCE_USERNAME}
spring.datasource.password=${MYSQL_DATASOURCE_PASSWORD}

#JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update


#---------------------POSTGRESQL-------------------------
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# spring.datasource.url=jdbc:postgresql://localhost:5432/cadastro
# spring.datasource.username=postgres
# spring.datasource.password=

# #JPA
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql= true
# spring.jpa.open-in-view= true

# THYMELEAF
spring.thymeleaf.cache= false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=file:src/main/resources/templates/

#-------------------H2 CONSOLE---------------
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa
#spring.datasource.password=

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


#---------------------HSQLDB--------------------
#spring.datasource.url=jdbc:hsqldb:file:database-file
#spring.datasource.username=SA
#spring.datasource.password=

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


#OUTRA FORMA DE CONFIGURAR PARA SUBIR A APLICAÇÃO

#spring.datasource.url=${DATABASE_URL}

#spring.jpa.hibernate.ddl-auto=update

